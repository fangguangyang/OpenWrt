# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: ["master"]
    paths:
      - "**"
      - "!README*"
      - "!changelog.txt"

  pull_request:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Build image
        run: |
          cat << EOF >> .env
          CONFIG_TARGET_ROOTFS_EXT4FS=n
          CONFIG_QCOW2_IMAGES=n
          CONFIG_ISO_IMAGES=n
          CONFIG_TARGET_IMAGES_PAD=n
          CONFIG_VDI_IMAGES=n
          CONFIG_VMDK_IMAGES=n
          CONFIG_VHDX_IMAGES=n
          CONFIG_GRUB_IMAGES=n
          CONFIG_GRUB_CONSOLE=n
          MODULES=lan openclash smartdns adguardhome vmtools zte-moden
          EOF
          ./run.sh --image=openwrt/imagebuilder:x86-64-${{ vars.OPENWRT_VERSION }} --use-mirror=0

      - name: Prepare Artifacts
        id: prepare-artifacts
        run: |
          ARTIFACTPATH="$(pwd)/image/"
          mkdir -p $ARTIFACTPATH
          cp bin/targets/x86/64/* $ARTIFACTPATH
          echo "ARTIFACTPATH=$ARTIFACTPATH" >> $GITHUB_OUTPUT
          echo "date=$(TZ='Asia/Shanghai' date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.prepare-artifacts.outputs.ARTIFACTPATH }}*
          tag_name: nightly
          name: "Nightly Build"
          body: |
            Auto-generated OpenWrt Build
            
            **Details**
            - Profile: generic.x86_64
            - Build Date: ${{ steps.prepare-artifacts.outputs.date }}
            - Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          prerelease: true
          draft: false

      - uses: actions/upload-artifact@main
        with:
          name: image_generic.x86_64
          path: ./image
