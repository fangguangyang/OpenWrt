# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: ["master"]
    paths:
      - "**"
      - "!README*"
      - "!changelog.txt"

  pull_request:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Build image
        run: |
          cat << EOF >> .env
          LAN_IP=192.168.30.13
          GATEWAY_IP=192.168.30.1
          ADH_PASSWD=$2a$10$DDp.ZewovqT8ODxry7bC2ulduZ0bNlQAHkO1YCxe/AsTqq1NBS.b2
          CLASH_CONFIG_URL=https://gist.github.com/EkkoG/20a52db0169c4a4769689521b1c5500e/raw/cf61a9397d0bdbd5b6bbad8fbb388ec851116470/clash_example.yaml
          CONFIG_TARGET_KERNEL_PARTSIZE=16
          CONFIG_TARGET_ROOTFS_PARTSIZE=256
          CONFIG_TARGET_ROOTFS_EXT4FS=n
          CONFIG_QCOW2_IMAGES=n
          CONFIG_ISO_IMAGES=n
          CONFIG_TARGET_IMAGES_PAD=n
          CONFIG_VDI_IMAGES=n
          CONFIG_VMDK_IMAGES=n
          CONFIG_VHDX_IMAGES=n
          CONFIG_GRUB_IMAGES=n
          CONFIG_GRUB_CONSOLE=n
          MODULES=openclash smartdns adguardhome vmtools zte-moden
          EOF
          ./run.sh --image=openwrt/imagebuilder:x86-64-${{ vars.OPENWRT_VERSION }} --use-mirror=0
      - name: Upload
        id: upload
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          PROFILE: generic.x86_64
        run: |
          ls ./ -alh
          # Prepare Release
          ARTIFACTPATH="$(pwd)/image/"
          mkdir -p $ARTIFACTPATH
          # Upload image
          cp bin/targets/x86/64/* $ARTIFACTPATH
          cd $ARTIFACTPATH
          git init
          git config user.name "bot"
          git config user.email "bot@github.com"
          git add .
          git commit -m "$PROFILE$(TZ='Asia/Shanghai' date +@%Y%m%d)"
          git push --force --quiet "https://$GITHUB_TOKEN@github.com/fangguangyang/OpenWrt.git" HEAD:image/$PROFILE
      - uses: actions/upload-artifact@main
        with:
          name: image_generic.x86_64
          path: ./image
